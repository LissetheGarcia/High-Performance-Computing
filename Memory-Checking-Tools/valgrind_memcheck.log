==4463== Memcheck, a memory error detector
==4463== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==4463== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info
==4463== Command: ./valgrind_memcheck
==4463== 
==4463== Invalid write of size 4
==4463==    at 0x1091CB: main (valgrind_memcheck.c:27)
==4463==  Address 0x4a51068 is 0 bytes after a block of size 40 alloc'd
==4463==    at 0x48417B4: malloc (vg_replace_malloc.c:381)
==4463==    by 0x109171: main (valgrind_memcheck.c:15)
==4463== 
==4463== Conditional jump or move depends on uninitialised value(s)
==4463==    at 0x1091FB: main (valgrind_memcheck.c:32)
==4463== 
==4463== Invalid read of size 4
==4463==    at 0x1091F6: main (valgrind_memcheck.c:32)
==4463==  Address 0x4a51068 is 0 bytes after a block of size 40 alloc'd
==4463==    at 0x48417B4: malloc (vg_replace_malloc.c:381)
==4463==    by 0x109171: main (valgrind_memcheck.c:15)
==4463== 
==4463== 
==4463== HEAP SUMMARY:
==4463==     in use at exit: 40 bytes in 1 blocks
==4463==   total heap usage: 1 allocs, 0 frees, 40 bytes allocated
==4463== 
==4463== 40 bytes in 1 blocks are definitely lost in loss record 1 of 1
==4463==    at 0x48417B4: malloc (vg_replace_malloc.c:381)
==4463==    by 0x109171: main (valgrind_memcheck.c:15)
==4463== 
==4463== LEAK SUMMARY:
==4463==    definitely lost: 40 bytes in 1 blocks
==4463==    indirectly lost: 0 bytes in 0 blocks
==4463==      possibly lost: 0 bytes in 0 blocks
==4463==    still reachable: 0 bytes in 0 blocks
==4463==         suppressed: 0 bytes in 0 blocks
==4463== 
==4463== Use --track-origins=yes to see where uninitialised values come from
==4463== For lists of detected and suppressed errors, rerun with: -s
==4463== ERROR SUMMARY: 14 errors from 4 contexts (suppressed: 0 from 0)
